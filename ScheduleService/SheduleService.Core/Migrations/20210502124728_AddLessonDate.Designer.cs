// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SheduleService.Core.DataAccess;

namespace SheduleService.Core.Migrations
{
    [DbContext(typeof(ScheduleSystemContext))]
    [Migration("20210502124728_AddLessonDate")]
    partial class AddLessonDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ScheduleService.Models.Lesson", b =>
                {
                    b.Property<string>("lesson_id")
                        .HasColumnType("text");

                    b.Property<string>("day_name")
                        .HasColumnType("text");

                    b.Property<string>("day_number")
                        .HasColumnType("text");

                    b.Property<string>("group_id")
                        .HasColumnType("text");

                    b.Property<DateTime>("lesson_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("lesson_full_name")
                        .HasColumnType("text");

                    b.Property<string>("lesson_name")
                        .HasColumnType("text");

                    b.Property<string>("lesson_number")
                        .HasColumnType("text");

                    b.Property<string>("lesson_room")
                        .HasColumnType("text");

                    b.Property<string>("lesson_type")
                        .HasColumnType("text");

                    b.Property<string>("lesson_week")
                        .HasColumnType("text");

                    b.Property<string>("teacher_name")
                        .HasColumnType("text");

                    b.Property<string>("time_end")
                        .HasColumnType("text");

                    b.Property<string>("time_start")
                        .HasColumnType("text");

                    b.HasKey("lesson_id");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ScheduleService.Models.Teacher", b =>
                {
                    b.Property<string>("teacher_id")
                        .HasColumnType("text");

                    b.Property<string>("teacher_full_name")
                        .HasColumnType("text");

                    b.Property<string>("teacher_name")
                        .HasColumnType("text");

                    b.Property<string>("teacher_rating")
                        .HasColumnType("text");

                    b.Property<string>("teacher_short_name")
                        .HasColumnType("text");

                    b.Property<string>("teacher_url")
                        .HasColumnType("text");

                    b.HasKey("teacher_id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ScheduleService.Models.TeacherOnLesson", b =>
                {
                    b.Property<string>("Lesson_Id")
                        .HasColumnType("text");

                    b.Property<string>("Teacher_Id")
                        .HasColumnType("text");

                    b.HasKey("Lesson_Id", "Teacher_Id");

                    b.HasIndex("Teacher_Id");

                    b.ToTable("TeacherOnLessons");
                });

            modelBuilder.Entity("ScheduleService.Models.TeacherOnLesson", b =>
                {
                    b.HasOne("ScheduleService.Models.Lesson", "Lesson")
                        .WithMany("Teachers")
                        .HasForeignKey("Lesson_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ScheduleService.Models.Teacher", "Teacher")
                        .WithMany("Lessons")
                        .HasForeignKey("Teacher_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
